{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","reorderedGoods","goods","visibleGoods","sort","goodA","goodB","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","setState","map","good","uuid","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,uGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdG,EArCH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENM,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKL,EAASc,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAINb,EACHM,EAAaQ,UACbR,EAgBqBS,CAAkBlB,EAAiBM,KAAKJ,OAE/D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAaL,EAASc,UAEtCS,QAAS,kBAAM,EAAKC,SAAS,CAAEnB,SAAUL,EAASc,WAPpD,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAaL,EAASgB,SAEtCO,QAAS,kBAAM,EAAKC,SAAS,CAAEnB,SAAUL,EAASgB,UAPpD,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAM,EAAKC,UAAS,SAAArB,GAAK,MAAK,CACrCC,YAAaD,EAAMC,gBARvB,sBAcEA,GACGC,IAAaL,EAASM,OACzB,wBACEe,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKC,SAAS,CAC3BpB,YAAY,EACZC,SAAUL,EAASM,QALvB,sBAaJ,6BACE,6BACGE,EAAeiB,KAAI,SAAAC,GAAI,OACtB,oBAAiB,UAAQ,OAAzB,SAAiCA,GAAxBC,6BArEvB,GAAyBC,aCxDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4975df37.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Component } from 'react';\nimport classNames from 'classnames';\nimport { v4 as uuid } from 'uuid';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const reorderedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPABET },\n            )}\n            onClick={() => this.setState({ sortType: SortType.ALPABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => this.setState(state => ({\n              isReversed: !state.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {(isReversed\n            || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState({\n                isReversed: false,\n                sortType: SortType.NONE,\n              })}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {reorderedGoods.map(good => (\n              <li key={uuid()} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}